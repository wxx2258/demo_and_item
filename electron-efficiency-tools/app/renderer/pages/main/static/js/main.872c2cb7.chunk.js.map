{"version":3,"sources":["utils/cache.ts","App.tsx","config/config.js","reportWebVitals.ts","index.tsx","../external \"electron\""],"names":["projectPathCache","storageKey","defaultData","getObjCacheValue","key","cacheMsg","JSON","parse","localStorage","getItem","error","Array","isArray","setObjCache","value","setItem","stringify","clearObjCache","cacheFactory","TabPane","Tabs","initProjectPaths","localservice","Windrunner","App","useState","projectPaths","setProjectPaths","openVscode","useCallback","path","ipcRenderer","send","addProject","val","console","log","preValue","newVal","name","className","defaultActiveKey","tab","layout","onFinish","Item","rules","required","message","type","placeholder","htmlType","Object","keys","map","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports","require"],"mappings":"mPA4BO,IAAMA,EA5Bb,SAAsBC,GAAuC,IAAnBC,EAAkB,uDAAJ,GACtD,SAASC,EAAiBC,GACxB,IAAIC,EAAgBH,EACpB,IACEG,EAAWC,KAAKC,MAAMC,aAAaC,QAAQR,IAAe,IAC1D,MAAOS,IACT,MACkB,kBAARN,GAAoBO,MAAMC,QAAQP,IAC3B,kBAARD,EAEAC,EAASD,GAETC,EAGX,SAASQ,EAAYC,GACnBN,aAAaO,QAAQd,EAAYK,KAAKU,UAAUF,IAElD,SAASG,IACPT,aAAaO,QAAQd,EAAYK,KAAKU,UAAUd,IAElD,MAAO,CACLC,mBACAU,cACAI,iBAI4BC,CAAa,sB,QCrBrCC,EAAYC,IAAZD,QAEFE,EAAgB,2BCTA,CACpBC,aAAc,qCACd,cAAe,oCACf,aAAc,mCACd,UAAW,6BAEXC,WAAY,mCAEZ,mBAAoB,uDACpB,mBAAoB,uDACpB,qBAAsB,2DDCnBvB,EAAiBG,oBAyEPqB,MAvEf,WAAgB,IAAD,EAC2BC,mBAAiBJ,GAD5C,mBACNK,EADM,KACQC,EADR,KAEPC,EAAaC,uBACjB,SAACC,GACCC,cAAYC,KAAK,aAAcF,KAEjC,IAEIG,EAAaJ,uBACjB,SAACK,GACCC,QAAQC,IAAI,QAASF,GACrBP,GAAgB,SAACU,GACf,IAAMC,EAAM,2BACPD,GADO,kBAETH,EAAIK,KAAOL,EAAIJ,OAGlB,OADA9B,EAAiBa,YAAYyB,GACtBA,OAGX,CAACX,IAEH,OACE,qBAAKa,UAAU,MAAf,SACE,eAAC,IAAD,CAAMC,iBAAiB,yDAAvB,UACE,eAACtB,EAAD,CAASuB,IAAI,QAAb,UACE,eAAC,IAAD,CAAMC,OAAO,SAASC,SAAUX,EAAhC,UACE,cAAC,IAAKY,KAAN,CACEN,KAAK,OACLO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,4BAFrC,SAIE,cAAC,IAAD,CACEC,KAAK,OACLC,YAAY,mBAGhB,cAAC,IAAKL,KAAN,CACEN,KAAK,OACLO,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,4BAFrC,SAIE,cAAC,IAAD,CACEC,KAAK,OACLC,YAAY,mBAGhB,cAAC,IAAD,CAAQD,KAAK,UAAUE,SAAS,SAAhC,+CAEF,qBAAKX,UAAU,mBAAf,SAEIY,OAAOC,KAAK3B,GAAc4B,KAAI,SAAAlD,GAC5B,OAAO,eAAC,IAAD,CAAQoC,UAAU,0BAAoCe,QAAS,WAEpE3B,EAAWF,EAAatB,KAFnB,yBAGDA,IAHkDA,UAzBvC,KAkCzB,cAACe,EAAD,CAASuB,IAAI,QAAb,kCAAyB,KAGzB,cAACvB,EAAD,CAASuB,IAAI,QAAb,kCAAyB,WE7DlBc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,iBChBAc,EAAOC,QAAUC,QAAQ,a","file":"static/js/main.872c2cb7.chunk.js","sourcesContent":["function cacheFactory(storageKey: string, defaultData = {}) {\n  function getObjCacheValue(key?: string | number) {\n    let cacheMsg: any = defaultData;\n    try {\n      cacheMsg = JSON.parse(localStorage.getItem(storageKey) || '');\n    } catch (error) {}\n    if (\n      (typeof key === 'number' && Array.isArray(cacheMsg)) ||\n      typeof key === 'string'\n    ) {\n      return cacheMsg[key];\n    } else {\n      return cacheMsg;\n    }\n  }\n  function setObjCache(value: Record<string, unknown> | any[]) {\n    localStorage.setItem(storageKey, JSON.stringify(value));\n  }\n  function clearObjCache() {\n    localStorage.setItem(storageKey, JSON.stringify(defaultData));\n  }\n  return {\n    getObjCacheValue,\n    setObjCache,\n    clearObjCache,\n  };\n}\n\nexport const projectPathCache = cacheFactory('PROJECT_PATH_CACHE')\n","import React, { useCallback, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport { Tabs ,Form, Input, Button} from 'antd';\nimport { ipcRenderer } from \"electron\";\nimport { projectPathCache } from './utils/cache';\nimport {config} from './config/config';\nconst { TabPane } = Tabs;\n\nconst initProjectPaths = {\n  ...config,\n  ...projectPathCache.getObjCacheValue()\n}\nfunction App() {\n  const [projectPaths, setProjectPaths] = useState<Object>(initProjectPaths)\n  const openVscode = useCallback(\n    (path: string) => {\n      ipcRenderer.send('openVscode', path)\n    },\n    [],\n  )\n  const addProject = useCallback(\n    (val) => {\n      console.log('val: ', val);\n      setProjectPaths((preValue)=> {\n        const newVal = {\n          ...preValue,\n          [val.name]: val.path\n        }\n        projectPathCache.setObjCache(newVal)\n        return newVal\n      })\n    },\n    [setProjectPaths],\n  )\n  return (\n    <div className=\"App\">\n      <Tabs defaultActiveKey=\"快捷打开项目编辑器\" >\n        <TabPane tab=\"Tab 1\" key=\"1\">\n          <Form layout=\"inline\" onFinish={addProject}>\n            <Form.Item\n              name=\"name\"\n              rules={[{ required: true, message: 'Please input your name!' }]}\n            >\n              <Input\n                type=\"text\"\n                placeholder=\"名称\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"path\"\n              rules={[{ required: true, message: 'Please input your path!' }]}\n            >\n              <Input\n                type=\"text\"\n                placeholder=\"路径\"\n              />\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">新增或修改</Button>\n          </Form>\n          <div className=\"tab1_button-list\">\n            {\n              Object.keys(projectPaths).map(key=> {\n                return <Button className=\"tab1_button-list_button\" key={key} onClick={()=> {\n                  // @ts-ignore\n                  openVscode(projectPaths[key])\n                }}>打开{key}</Button>\n              })\n            }\n          </div>\n          \n        </TabPane>\n        <TabPane tab=\"Tab 2\" key=\"2\">\n          Content of Tab Pane 2\n        </TabPane>\n        <TabPane tab=\"Tab 3\" key=\"3\">\n          Content of Tab Pane 3\n        </TabPane>\n      </Tabs>\n      \n    </div>\n  );\n}\n\nexport default App;\n","export const config = {\n  localservice: '/Users/xiaoxinwu/code/localservice',\n  'dp-rn-order': '/Users/xiaoxinwu/code/dp-rn-order',\n  'dp-comm-rn': '/Users/xiaoxinwu/code/dp-comm-rn',\n  'rn-host': '/Users/xiaoxinwu/code/host',\n\n  Windrunner: '/Users/xiaoxinwu/code/Windrunner',\n\n  \"fsg-db-portal-fe\": '/Users/xiaoxinwu/code/fsg-db-portal/fsg-db-portal-fe',\n  \"fsg-db-portal-be\": '/Users/xiaoxinwu/code/fsg-db-portal/fsg-db-portal-be',\n  \"fsg-db-portal-comm\": '/Users/xiaoxinwu/code/fsg-db-portal/fsg-db-portal-comm',\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = require(\"electron\");"],"sourceRoot":""}